name: Release and Publish

on:
  push:
    branches:
      - master

jobs:
  bump-tag-and-release:
    name: Bump Version, Tag and Push
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Install xmlstarlet
        run: sudo apt-get install -y xmlstarlet

      - name: Get and bump version
        id: set_version
        run: |
          csproj=$(find . -name '*.csproj' ! -name '*.Tests.csproj' | head -n 1)
          echo "📄 Found project file: $csproj"

          current=$(xmlstarlet sel -t -v "//Project/PropertyGroup/Version" "$csproj")
          if [ -z "$current" ]; then
            echo "❌ No <Version> tag found in $csproj"
            exit 1
          fi
          echo "📦 Current version: $current"

          IFS='.' read -r major minor patch <<< "$current"
          patch=$((patch + 1))
          newVersion="$major.$minor.$patch"
          echo "🔖 New version: $newVersion"
          echo "version=$newVersion" >> $GITHUB_OUTPUT

          for f in $(find . -name '*.csproj' ! -name '*.Tests.csproj'); do
            echo "🔧 Updating $f"
            xmlstarlet ed --inplace -u "//Version" -v "$newVersion" "$f"
          done

          git config user.name github-actions
          git config user.email github-actions@github.com

          git add .                             # ✅ Stage version changes
          git commit -m "🔖 Release v$newVersion"  # ✅ Commit them

          git fetch origin
          git rebase origin/master

          git tag "v$newVersion"
          git push origin master --follow-tags

  create-release:
    name: Create GitHub Release
    needs: bump-tag-and-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.bump-tag-and-release.outputs.version }}
          name: Release v${{ needs.bump-tag-and-release.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  pack-and-publish:
    name: Pack and Publish to NuGet
    needs: bump-tag-and-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Restore
        run: dotnet restore

      - name: Pack all .csproj (excluding Tests)
        run: |
          for proj in $(find . -name '*.csproj' ! -name '*.Tests.csproj'); do
            echo "📦 Packing $proj"
            dotnet pack "$proj" --configuration Release --output ./nupkgs
          done

      - name: Publish packages to NuGet
        run: |
          for nupkg in ./nupkgs/*.nupkg; do
            echo "🚀 Publishing $nupkg"
            dotnet nuget push "$nupkg" --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}
          done
